{"version":3,"sources":["hooks/useWordGame.js","components/GameConsole.js","components/GameArea.js","App.js","index.js"],"names":["useWordGame","startTime","useState","textData","setTextData","timerCount","setCount","isTimerRunning","setIsTimerRunning","wordCount","setWordCount","textareaRef","useRef","handleTextChange","e","value","target","handleWordCount","textStr","trim","split","filter","word","length","handleGameStart","a","current","focus","handleGameEnd","useEffect","setTimeout","prevTimerCount","GameConsole","props","data","className","onClick","type","disabled","GameArea","ref","name","onChange","App","consoleData","areaData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2NA6CeA,MA3Cf,WAAsC,IAAjBC,EAAgB,uDAAJ,GAAI,EACCC,mBAAS,6BADV,mBACzBC,EADyB,KACfC,EADe,OAEAF,mBAASD,GAFT,mBAEzBI,EAFyB,KAEbC,EAFa,OAGaJ,oBAAS,GAHtB,mBAGzBK,EAHyB,KAGTC,EAHS,OAIGN,mBAAS,GAJZ,mBAIzBO,EAJyB,KAIdC,EAJc,KAK3BC,EAAcC,iBAAO,MAE3B,SAASC,EAAiBC,GAAI,IAClBC,EAAUD,EAAEE,OAAZD,MACRX,EAAYW,GAGhB,SAASE,EAAgBC,GAGrB,OAFmBA,EAAQC,OAAOC,MAAM,KACHC,QAAO,SAAAC,GAAI,MAAa,KAATA,KAAaC,OAdpC,SAkBlBC,IAlBkB,2EAkBjC,sBAAAC,EAAA,6DACIrB,EAAY,IACZE,EAASL,GAFb,SAGUO,GAAkB,GAH5B,OAIIG,EAAYe,QAAQC,QAJxB,4CAlBiC,sBAyBjC,SAASC,IACLpB,GAAkB,GAClBE,EAAaO,EAAgBd,IAajC,OAVA0B,qBAAU,WACFxB,EAAa,GAAKE,EAClBuB,YAAY,WACRxB,GAAS,SAAAyB,GAAc,OAAIA,EAAiB,OAC7C,KACmB,IAAf1B,GACPuB,MAEL,CAACvB,EAAYE,IAET,CAACI,cAAaR,WAAUU,mBAAkBN,iBAAgBF,aAAYmB,kBAAiBf,c,OCtBnFuB,MAlBf,SAAqBC,GAAQ,IAAD,EAE8BA,EAAMC,KAArD3B,EAFiB,EAEjBA,eAAgBF,EAFC,EAEDA,WAAYmB,EAFX,EAEWA,gBAEnC,OACI,sBAAKW,UAAS,yBAAoB5B,EAAiB,UAAY,IAA/D,UACI,oBAAI4B,UAAU,QAAd,SAAuB9B,IACvB,wBACI8B,UAAU,YACVC,QAASZ,EACTa,KAAK,SACLC,SAAU/B,EAJd,uBCSGgC,MAhBf,SAAkBN,GAAQ,IAAD,EAE6CA,EAAMC,KAAjEvB,EAFc,EAEdA,YAAaR,EAFC,EAEDA,SAAUU,EAFT,EAESA,iBAAkBN,EAF3B,EAE2BA,eAEhD,OACI,0BACI4B,UAAU,aACVK,IAAK7B,EACL8B,KAAK,YACL1B,MAAOZ,EACPuC,SAAU7B,EACVyB,UAAW/B,KCgBRoC,MAxBf,WAAgB,IAAD,EASP3C,EAAY,IAPZW,EAFO,EAEPA,YACAR,EAHO,EAGPA,SACAU,EAJO,EAIPA,iBACAN,EALO,EAKPA,eACAF,EANO,EAMPA,WACAmB,EAPO,EAOPA,gBACAf,EARO,EAQPA,UAGEmC,EAAc,CAACrC,iBAAgBF,aAAYmB,mBAC3CqB,EAAW,CAAClC,cAAaR,WAAUU,mBAAkBN,kBAE3D,OACI,sBAAK4B,UAAU,eAAf,UACI,oBAAIA,UAAU,QAAd,2BACA,cAAC,EAAD,CAAUD,KAAMW,IAChB,cAAC,EAAD,CAAaX,KAAMU,IACnB,qBAAIT,UAAU,QAAd,oBAA8B1B,SCnB1CqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.02ec5029.chunk.js","sourcesContent":["import { useState, useEffect, useRef } from 'react'\n\nfunction useWordGame(startTime = 15) {\n    const [ textData, setTextData ] = useState('How fast can you type?...')\n    const [ timerCount, setCount ] = useState(startTime)\n    const [ isTimerRunning, setIsTimerRunning ] = useState(false)\n    const [ wordCount, setWordCount ] = useState(0)\n    const textareaRef = useRef(null)\n\n    function handleTextChange(e) {\n        const { value } = e.target\n        setTextData(value)\n    }\n\n    function handleWordCount(textStr) {\n        const inputArray = textStr.trim().split(' ')\n        const filteredWordCount = inputArray.filter(word => word !== '').length\n        return filteredWordCount\n    }\n\n    async function handleGameStart() {   \n        setTextData('')\n        setCount(startTime)\n        await setIsTimerRunning(true)\n        textareaRef.current.focus()\n    }\n\n    function handleGameEnd() {\n        setIsTimerRunning(false)\n        setWordCount(handleWordCount(textData))\n    }\n\n    useEffect(() => {\n        if (timerCount > 0 && isTimerRunning) {\n            setTimeout( () => {\n                setCount(prevTimerCount => prevTimerCount - 1)\n            }, 1000)\n        } else if (timerCount === 0) {\n            handleGameEnd()\n        }\n    }, [timerCount, isTimerRunning])\n\n    return {textareaRef, textData, handleTextChange, isTimerRunning, timerCount, handleGameStart, wordCount}\n}\n\nexport default useWordGame","import React from 'react'\n\nfunction GameConsole(props) {\n\n    const {isTimerRunning, timerCount, handleGameStart} = props.data\n\n    return(\n        <div className={`console-wrapper${isTimerRunning ? \" active\" : \"\"}`}>\n            <h3 className=\"timer\">{timerCount}</h3>\n            <button\n                className=\"start-btn\"\n                onClick={handleGameStart} \n                type=\"button\" \n                disabled={isTimerRunning}\n            >Start\n            </button>\n        </div>\n    )\n}\n\nexport default GameConsole","import React from 'react'\n\nfunction GameArea(props) {\n\n    const {textareaRef, textData, handleTextChange, isTimerRunning} = props.data\n\n    return (\n        <textarea\n            className=\"text-field\"\n            ref={textareaRef}\n            name=\"gameInput\"\n            value={textData}\n            onChange={handleTextChange}\n            disabled={!isTimerRunning}\n        />\n    )\n}\n\nexport default GameArea","import React from 'react'\nimport useWordGame from './hooks/useWordGame'\nimport GameConsole from './components/GameConsole'\nimport GameArea from './components/GameArea'\n\nfunction App() {\n    const {\n        textareaRef,\n        textData,\n        handleTextChange,\n        isTimerRunning,\n        timerCount,\n        handleGameStart,\n        wordCount\n    } = useWordGame(30)\n\n    const consoleData = {isTimerRunning, timerCount, handleGameStart}\n    const areaData = {textareaRef, textData, handleTextChange, isTimerRunning}\n\n    return (\n        <div className=\"game-wrapper\">\n            <h1 className=\"title\">SPEED TYPERRR</h1>\n            <GameArea data={areaData}/>\n            <GameConsole data={consoleData} />\n            <h2 className=\"score\">WORDS: {wordCount}</h2>\n        </div>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}